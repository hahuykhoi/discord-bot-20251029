# -*- coding: utf-8 -*-
"""
Permission Decorator - Decorator ƒë·ªÉ ki·ªÉm tra quy·ªÅn tr∆∞·ªõc khi th·ª±c thi l·ªánh
"""
import discord
from discord.ext import commands
import functools
import logging

logger = logging.getLogger(__name__)

def check_permission():
    """
    Decorator ƒë·ªÉ ki·ªÉm tra quy·ªÅn l·ªánh
    S·ª≠ d·ª•ng h·ªá th·ªëng permission ƒë·ªông
    """
    def decorator(func):
        @functools.wraps(func)
        async def wrapper(*args, **kwargs):
            # T√¨m ctx trong args
            ctx = None
            for arg in args:
                if isinstance(arg, commands.Context):
                    ctx = arg
                    break
            
            if not ctx:
                logger.error("Kh√¥ng t√¨m th·∫•y Context trong permission decorator")
                return await func(*args, **kwargs)
            
            # L·∫•y t√™n l·ªánh
            command_name = ctx.command.name if ctx.command else "unknown"
            
            # Ki·ªÉm tra xem bot c√≥ permission system kh√¥ng
            if not hasattr(ctx.bot, 'permission_manager'):
                # N·∫øu kh√¥ng c√≥ permission system, cho ph√©p t·∫•t c·∫£
                return await func(*args, **kwargs)
            
            permission_manager = ctx.bot.permission_manager
            
            # Ki·ªÉm tra quy·ªÅn
            has_permission, reason = permission_manager.check_command_permission(ctx, command_name)
            
            if not has_permission:
                # T·∫°o embed th√¥ng b√°o kh√¥ng c√≥ quy·ªÅn
                error_embed = discord.Embed(
                    title="‚ùå Kh√¥ng c√≥ quy·ªÅn",
                    description=reason,
                    color=discord.Color.red()
                )
                
                required_level = permission_manager.get_command_permission(command_name)
                
                error_embed.add_field(
                    name="üìã Chi ti·∫øt",
                    value=(
                        f"**L·ªánh:** `{command_name}`\n"
                        f"**Y√™u c·∫ßu quy·ªÅn:** `{required_level}`"
                    ),
                    inline=False
                )
                
                # Gi·∫£i th√≠ch c√°ch c√≥ quy·ªÅn
                if required_level == "supreme_admin":
                    how_to_get = "Li√™n h·ªá Supreme Admin ƒë·ªÉ ƒë∆∞·ª£c c·∫•p quy·ªÅn"
                elif required_level == "admin":
                    how_to_get = "Li√™n h·ªá Admin ho·∫∑c Supreme Admin ƒë·ªÉ ƒë∆∞·ª£c c·∫•p quy·ªÅn"
                else:
                    how_to_get = "L·ªánh n√†y d√†nh cho t·∫•t c·∫£ user"
                
                error_embed.add_field(
                    name="üí° C√°ch c√≥ quy·ªÅn",
                    value=how_to_get,
                    inline=False
                )
                
                await ctx.reply(embed=error_embed, mention_author=True)
                return
            
            # C√≥ quy·ªÅn, th·ª±c thi l·ªánh
            return await func(*args, **kwargs)
        
        return wrapper
    return decorator

def require_permission(level):
    """
    Decorator ƒë·ªÉ y√™u c·∫ßu permission level c·ª• th·ªÉ
    
    Args:
        level (str): "supreme_admin", "admin", ho·∫∑c "user"
    """
    def decorator(func):
        @functools.wraps(func)
        async def wrapper(*args, **kwargs):
            # T√¨m ctx trong args
            ctx = None
            for arg in args:
                if isinstance(arg, commands.Context):
                    ctx = arg
                    break
            
            if not ctx:
                logger.error("Kh√¥ng t√¨m th·∫•y Context trong require_permission decorator")
                return await func(*args, **kwargs)
            
            user_id = ctx.author.id
            
            # Ki·ªÉm tra quy·ªÅn theo level
            if level == "supreme_admin":
                if user_id != ctx.bot.supreme_admin_id:
                    error_embed = discord.Embed(
                        title="‚ùå Kh√¥ng c√≥ quy·ªÅn",
                        description="L·ªánh n√†y ch·ªâ d√†nh cho Supreme Admin!",
                        color=discord.Color.red()
                    )
                    await ctx.reply(embed=error_embed, mention_author=True)
                    return
            elif level == "admin":
                if user_id not in ctx.bot.admin_ids and user_id != ctx.bot.supreme_admin_id:
                    error_embed = discord.Embed(
                        title="‚ùå Kh√¥ng c√≥ quy·ªÅn",
                        description="L·ªánh n√†y ch·ªâ d√†nh cho Admin tr·ªü l√™n!",
                        color=discord.Color.red()
                    )
                    await ctx.reply(embed=error_embed, mention_author=True)
                    return
            # level == "user" th√¨ ai c≈©ng ƒë∆∞·ª£c d√πng
            
            # C√≥ quy·ªÅn, th·ª±c thi l·ªánh
            return await func(*args, **kwargs)
        
        return wrapper
    return decorator
