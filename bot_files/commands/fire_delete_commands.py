# -*- coding: utf-8 -*-
"""
Fire Delete Commands - H·ªá th·ªëng x√≥a tin nh·∫Øn b·∫±ng emoji l·ª≠a üî•
Admin react emoji üî• v√†o tin nh·∫Øn ƒë·ªÉ x√≥a ngay l·∫≠p t·ª©c
"""
import discord
from discord.ext import commands
import json
import os
from datetime import datetime
import logging

logger = logging.getLogger(__name__)

class FireDeleteCommands:
    def __init__(self, bot_instance):
        self.bot_instance = bot_instance
        self.bot = bot_instance.bot
        self.data_folder = 'data'
        self.fire_delete_file = os.path.join(self.data_folder, 'fire_delete_config.json')
        
        # T·∫°o data folder n·∫øu ch∆∞a c√≥
        if not os.path.exists(self.data_folder):
            os.makedirs(self.data_folder)
        self.fire_delete_config = {}  # {guild_id: {'enabled': bool, 'delete_history': []}}
        self.load_fire_delete_config()
    
    def load_fire_delete_config(self):
        """T·∫£i c·∫•u h√¨nh fire delete t·ª´ file JSON"""
        try:
            if os.path.exists(self.fire_delete_file):
                with open(self.fire_delete_file, 'r', encoding='utf-8') as f:
                    data = json.load(f)
                    # Convert string keys back to int
                    for guild_id_str, config in data.get('fire_delete_config', {}).items():
                        guild_id = int(guild_id_str)
                        self.fire_delete_config[guild_id] = config
                
                logger.info(f"ƒê√£ t·∫£i fire delete config t·ª´ {len(self.fire_delete_config)} guild")
            else:
                # T·∫°o file config m·∫∑c ƒë·ªãnh
                default_data = {
                    "fire_delete_config": {},
                    "description": "C·∫•u h√¨nh Fire Delete theo guild",
                    "global_delete_history": []
                }
                with open(self.fire_delete_file, 'w', encoding='utf-8') as f:
                    json.dump(default_data, f, indent=4, ensure_ascii=False)
                logger.info(f"ƒê√£ t·∫°o file fire delete config m·ªõi: {self.fire_delete_file}")
        except Exception as e:
            logger.error(f"L·ªói khi t·∫£i fire delete config: {e}")
    
    def save_fire_delete_config(self):
        """L∆∞u c·∫•u h√¨nh fire delete v√†o file JSON"""
        try:
            # Load existing data ƒë·ªÉ gi·ªØ l·∫°i global_delete_history
            existing_data = {}
            if os.path.exists(self.fire_delete_file):
                with open(self.fire_delete_file, 'r', encoding='utf-8') as f:
                    existing_data = json.load(f)
            
            # Convert int keys to string for JSON
            fire_delete_data = {}
            for guild_id, config in self.fire_delete_config.items():
                fire_delete_data[str(guild_id)] = config
            
            # Update fire_delete_config
            existing_data['fire_delete_config'] = fire_delete_data
            existing_data['description'] = "C·∫•u h√¨nh Fire Delete theo guild"
            
            with open(self.fire_delete_file, 'w', encoding='utf-8') as f:
                json.dump(existing_data, f, indent=4, ensure_ascii=False)
            logger.info("ƒê√£ l∆∞u fire delete config th√†nh c√¥ng")
        except Exception as e:
            logger.error(f"L·ªói khi l∆∞u fire delete config: {e}")
    
    def add_delete_history(self, guild_id: int, admin_id: int, message_info: dict, success: bool, error: str = ""):
        """Th√™m l·ªãch s·ª≠ fire delete v√†o file"""
        try:
            # Load existing data
            existing_data = {}
            if os.path.exists(self.fire_delete_file):
                with open(self.fire_delete_file, 'r', encoding='utf-8') as f:
                    existing_data = json.load(f)
            
            # Ensure global_delete_history exists
            if 'global_delete_history' not in existing_data:
                existing_data['global_delete_history'] = []
            
            # Add new history entry
            history_entry = {
                'guild_id': guild_id,
                'admin_id': admin_id,
                'message_info': message_info,
                'success': success,
                'error': error,
                'timestamp': datetime.now().isoformat()
            }
            
            existing_data['global_delete_history'].append(history_entry)
            
            # Keep only last 100 entries ƒë·ªÉ tr√°nh file qu√° l·ªõn
            if len(existing_data['global_delete_history']) > 100:
                existing_data['global_delete_history'] = existing_data['global_delete_history'][-100:]
            
            # Save back to file
            with open(self.fire_delete_file, 'w', encoding='utf-8') as f:
                json.dump(existing_data, f, indent=4, ensure_ascii=False)
                
        except Exception as e:
            logger.error(f"L·ªói khi th√™m fire delete history: {e}")
    
    def is_fire_delete_enabled(self, guild_id: int) -> bool:
        """Ki·ªÉm tra xem fire delete c√≥ ƒë∆∞·ª£c b·∫≠t cho guild kh√¥ng"""
        return self.fire_delete_config.get(guild_id, {}).get('enabled', False)
    
    def enable_fire_delete(self, guild_id: int):
        """B·∫≠t fire delete cho guild"""
        if guild_id not in self.fire_delete_config:
            self.fire_delete_config[guild_id] = {}
        
        self.fire_delete_config[guild_id]['enabled'] = True
        self.save_fire_delete_config()
    
    def disable_fire_delete(self, guild_id: int):
        """T·∫Øt fire delete cho guild"""
        if guild_id not in self.fire_delete_config:
            self.fire_delete_config[guild_id] = {}
        
        self.fire_delete_config[guild_id]['enabled'] = False
        self.save_fire_delete_config()
    
    async def handle_fire_delete_reaction(self, reaction, user):
        """X·ª≠ l√Ω khi c√≥ ng∆∞·ªùi react emoji üî•"""
        try:
            # B·ªè qua n·∫øu kh√¥ng ph·∫£i emoji üî•
            if str(reaction.emoji) != "üî•":
                return
            
            # B·ªè qua n·∫øu l√† bot
            if user.bot:
                return
            
            # B·ªè qua n·∫øu kh√¥ng ph·∫£i trong guild
            if not reaction.message.guild:
                return
            
            guild_id = reaction.message.guild.id
            
            # Ki·ªÉm tra fire delete c√≥ ƒë∆∞·ª£c b·∫≠t kh√¥ng
            if not self.is_fire_delete_enabled(guild_id):
                return
            
            # Ki·ªÉm tra quy·ªÅn admin
            member = reaction.message.guild.get_member(user.id)
            if not member or not self.bot_instance.has_warn_permission(user.id, member.guild_permissions):
                # G·ª≠i DM th√¥ng b√°o kh√¥ng c√≥ quy·ªÅn
                try:
                    embed = discord.Embed(
                        title="‚ùå Kh√¥ng c√≥ quy·ªÅn Fire Delete",
                        description="Ch·ªâ admin m·ªõi c√≥ th·ªÉ s·ª≠ d·ª•ng emoji üî• ƒë·ªÉ x√≥a tin nh·∫Øn!",
                        color=discord.Color.red(),
                        timestamp=datetime.now()
                    )
                    embed.add_field(
                        name="üî• Fire Delete",
                        value="T√≠nh nƒÉng n√†y ch·ªâ d√†nh cho admin ƒë·ªÉ x√≥a tin nh·∫Øn nhanh ch√≥ng",
                        inline=False
                    )
                    embed.set_footer(text=f"Server: {reaction.message.guild.name}")
                    await user.send(embed=embed)
                except:
                    pass  # Kh√¥ng quan tr·ªçng n·∫øu kh√¥ng g·ª≠i ƒë∆∞·ª£c DM
                return
            
            # Kh√¥ng th·ªÉ x√≥a tin nh·∫Øn c·ªßa ch√≠nh bot
            if reaction.message.author == self.bot.user:
                try:
                    embed = discord.Embed(
                        title="‚ö†Ô∏è Kh√¥ng th·ªÉ x√≥a tin nh·∫Øn bot",
                        description="Kh√¥ng th·ªÉ s·ª≠ d·ª•ng Fire Delete ƒë·ªÉ x√≥a tin nh·∫Øn c·ªßa ch√≠nh bot!",
                        color=discord.Color.orange(),
                        timestamp=datetime.now()
                    )
                    await user.send(embed=embed)
                except:
                    pass
                return
            
            # Th√¥ng tin tin nh·∫Øn ƒë·ªÉ l∆∞u l·ªãch s·ª≠
            message_info = {
                'message_id': reaction.message.id,
                'channel_id': reaction.message.channel.id,
                'channel_name': reaction.message.channel.name,
                'author_id': reaction.message.author.id,
                'author_name': reaction.message.author.display_name,
                'content_preview': reaction.message.content[:100] if reaction.message.content else "[No content]"
            }
            
            # Th·ª≠ x√≥a tin nh·∫Øn
            try:
                await reaction.message.delete()
                
                # G·ª≠i DM th√¥ng b√°o th√†nh c√¥ng
                try:
                    embed = discord.Embed(
                        title="üî• Fire Delete th√†nh c√¥ng!",
                        description="Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng!",
                        color=discord.Color.green(),
                        timestamp=datetime.now()
                    )
                    
                    embed.add_field(
                        name="üìç K√™nh",
                        value=f"#{message_info['channel_name']}",
                        inline=True
                    )
                    
                    embed.add_field(
                        name="üë§ T√°c gi·∫£",
                        value=message_info['author_name'],
                        inline=True
                    )
                    
                    embed.add_field(
                        name="üìù N·ªôi dung",
                        value=f"```{message_info['content_preview']}```",
                        inline=False
                    )
                    
                    embed.set_footer(text=f"Server: {reaction.message.guild.name}")
                    await user.send(embed=embed)
                except:
                    pass  # Kh√¥ng quan tr·ªçng n·∫øu kh√¥ng g·ª≠i ƒë∆∞·ª£c DM
                
                # L∆∞u l·ªãch s·ª≠ th√†nh c√¥ng
                self.add_delete_history(guild_id, user.id, message_info, True)
                
                logger.info(f"Fire Delete: Admin {user} ƒë√£ x√≥a tin nh·∫Øn c·ªßa {reaction.message.author} trong #{reaction.message.channel.name}")
                
            except discord.Forbidden:
                # Kh√¥ng c√≥ quy·ªÅn x√≥a tin nh·∫Øn
                try:
                    embed = discord.Embed(
                        title="‚ùå Fire Delete th·∫•t b·∫°i",
                        description="Bot kh√¥ng c√≥ quy·ªÅn x√≥a tin nh·∫Øn n√†y!",
                        color=discord.Color.red(),
                        timestamp=datetime.now()
                    )
                    embed.add_field(
                        name="üí° Gi·∫£i ph√°p",
                        value="ƒê·∫£m b·∫£o bot c√≥ quy·ªÅn 'Manage Messages' trong k√™nh n√†y",
                        inline=False
                    )
                    await user.send(embed=embed)
                except:
                    pass
                
                # L∆∞u l·ªãch s·ª≠ th·∫•t b·∫°i
                self.add_delete_history(guild_id, user.id, message_info, False, "No permission")
                
            except discord.NotFound:
                # Tin nh·∫Øn ƒë√£ b·ªã x√≥a
                try:
                    embed = discord.Embed(
                        title="‚ö†Ô∏è Tin nh·∫Øn ƒë√£ b·ªã x√≥a",
                        description="Tin nh·∫Øn n√†y ƒë√£ b·ªã x√≥a tr∆∞·ªõc ƒë√≥!",
                        color=discord.Color.orange(),
                        timestamp=datetime.now()
                    )
                    await user.send(embed=embed)
                except:
                    pass
                
                # L∆∞u l·ªãch s·ª≠ th·∫•t b·∫°i
                self.add_delete_history(guild_id, user.id, message_info, False, "Message not found")
                
            except Exception as e:
                # L·ªói kh√°c
                try:
                    embed = discord.Embed(
                        title="‚ùå Fire Delete l·ªói",
                        description=f"C√≥ l·ªói x·∫£y ra: {str(e)[:100]}",
                        color=discord.Color.red(),
                        timestamp=datetime.now()
                    )
                    await user.send(embed=embed)
                except:
                    pass
                
                # L∆∞u l·ªãch s·ª≠ th·∫•t b·∫°i
                self.add_delete_history(guild_id, user.id, message_info, False, str(e)[:100])
                logger.error(f"Fire Delete error: {e}")
            
        except Exception as e:
            logger.error(f"L·ªói trong handle_fire_delete_reaction: {e}")
    
    def register_commands(self):
        """Thi·∫øt l·∫≠p c√°c l·ªánh fire delete"""
        
        @self.bot.command(name='firedelete')
        async def fire_delete_command(ctx, action: str = None, limit: int = 10):
            """
            Qu·∫£n l√Ω t√≠nh nƒÉng Fire Delete
            Ch·ªâ admin m·ªõi c√≥ quy·ªÅn s·ª≠ d·ª•ng
            
            Usage: 
            - ;firedelete on - B·∫≠t fire delete cho server
            - ;firedelete off - T·∫Øt fire delete cho server
            - ;firedelete status - Xem tr·∫°ng th√°i fire delete
            - ;firedelete history [s·ªë l∆∞·ª£ng] - Xem l·ªãch s·ª≠ fire delete (Supreme Admin)
            """
            # Ki·ªÉm tra quy·ªÅn admin
            if not self.bot_instance.has_warn_permission(ctx.author.id, ctx.author.guild_permissions):
                embed = discord.Embed(
                    title="‚ùå Kh√¥ng c√≥ quy·ªÅn",
                    description="Ch·ªâ admin m·ªõi c√≥ th·ªÉ qu·∫£n l√Ω Fire Delete!",
                    color=discord.Color.red()
                )
                await ctx.reply(embed=embed, mention_author=True)
                return
            
            if not action:
                # Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n
                embed = discord.Embed(
                    title="üî• Fire Delete System",
                    description="H·ªá th·ªëng x√≥a tin nh·∫Øn b·∫±ng emoji l·ª≠a",
                    color=discord.Color.orange()
                )
                
                embed.add_field(
                    name="üìù C√°ch s·ª≠ d·ª•ng",
                    value="`/firedelete on` - B·∫≠t fire delete\n"
                          "`/firedelete off` - T·∫Øt fire delete\n"
                          "`/firedelete status` - Xem tr·∫°ng th√°i\n"
                          "`/firedelete history [s·ªë]` - Xem l·ªãch s·ª≠",
                    inline=False
                )
                
                embed.add_field(
                    name="üî• C√°ch ho·∫°t ƒë·ªông",
                    value="‚Ä¢ Admin react emoji üî• v√†o tin nh·∫Øn ƒë·ªÉ x√≥a\n"
                          "‚Ä¢ Ch·ªâ admin m·ªõi c√≥ quy·ªÅn s·ª≠ d·ª•ng\n"
                          "‚Ä¢ Th√¥ng b√°o DM k·∫øt qu·∫£ cho admin\n"
                          "‚Ä¢ L∆∞u l·ªãch s·ª≠ t·∫•t c·∫£ ho·∫°t ƒë·ªông",
                    inline=False
                )
                
                # Tr·∫°ng th√°i hi·ªán t·∫°i
                is_enabled = self.is_fire_delete_enabled(ctx.guild.id)
                status_text = "üü¢ **ƒêang B·∫¨T**" if is_enabled else "üî¥ **ƒêang T·∫ÆT**"
                
                embed.add_field(
                    name="üìä Tr·∫°ng th√°i hi·ªán t·∫°i",
                    value=status_text,
                    inline=True
                )
                
                embed.set_footer(text="Ch·ªâ admin m·ªõi c√≥ th·ªÉ s·ª≠ d·ª•ng l·ªánh n√†y")
                await ctx.reply(embed=embed, mention_author=True)
                return
            
            if action.lower() == 'on':
                # B·∫≠t fire delete
                if self.is_fire_delete_enabled(ctx.guild.id):
                    embed = discord.Embed(
                        title="‚ö†Ô∏è ƒê√£ ƒë∆∞·ª£c b·∫≠t",
                        description="Fire Delete ƒë√£ ƒë∆∞·ª£c b·∫≠t cho server n√†y r·ªìi!",
                        color=discord.Color.orange()
                    )
                    await ctx.reply(embed=embed, mention_author=True)
                    return
                
                self.enable_fire_delete(ctx.guild.id)
                
                embed = discord.Embed(
                    title="üî• Fire Delete ƒë√£ B·∫¨T!",
                    description="Admin c√≥ th·ªÉ react emoji üî• ƒë·ªÉ x√≥a tin nh·∫Øn!",
                    color=discord.Color.green(),
                    timestamp=datetime.now()
                )
                
                embed.add_field(
                    name="üéØ C√°ch s·ª≠ d·ª•ng",
                    value="‚Ä¢ React emoji üî• v√†o tin nh·∫Øn mu·ªën x√≥a\n"
                          "‚Ä¢ Tin nh·∫Øn s·∫Ω b·ªã x√≥a ngay l·∫≠p t·ª©c\n"
                          "‚Ä¢ B·∫°n s·∫Ω nh·∫≠n th√¥ng b√°o DM v·ªÅ k·∫øt qu·∫£",
                    inline=False
                )
                
                embed.add_field(
                    name="‚ö†Ô∏è L∆∞u √Ω",
                    value="‚Ä¢ Ch·ªâ admin m·ªõi c√≥ quy·ªÅn s·ª≠ d·ª•ng\n"
                          "‚Ä¢ Kh√¥ng th·ªÉ x√≥a tin nh·∫Øn c·ªßa bot\n"
                          "‚Ä¢ Bot c·∫ßn quy·ªÅn 'Manage Messages'",
                    inline=False
                )
                
                embed.add_field(
                    name="üëë B·∫≠t b·ªüi",
                    value=ctx.author.mention,
                    inline=True
                )
                
                embed.set_footer(text="Fire Delete ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t")
                await ctx.reply(embed=embed, mention_author=True)
                
                logger.info(f"Fire Delete ON: B·∫≠t b·ªüi {ctx.author} trong guild {ctx.guild.id}")
                
            elif action.lower() == 'off':
                # T·∫Øt fire delete
                if not self.is_fire_delete_enabled(ctx.guild.id):
                    embed = discord.Embed(
                        title="‚ö†Ô∏è ƒê√£ ƒë∆∞·ª£c t·∫Øt",
                        description="Fire Delete ƒë√£ ƒë∆∞·ª£c t·∫Øt cho server n√†y r·ªìi!",
                        color=discord.Color.orange()
                    )
                    await ctx.reply(embed=embed, mention_author=True)
                    return
                
                self.disable_fire_delete(ctx.guild.id)
                
                embed = discord.Embed(
                    title="üî¥ Fire Delete ƒë√£ T·∫ÆT!",
                    description="Admin kh√¥ng th·ªÉ d√πng emoji üî• ƒë·ªÉ x√≥a tin nh·∫Øn n·ªØa!",
                    color=discord.Color.red(),
                    timestamp=datetime.now()
                )
                
                embed.add_field(
                    name="üì¥ T√¨nh tr·∫°ng",
                    value="‚Ä¢ Emoji üî• kh√¥ng c√≤n ho·∫°t ƒë·ªông\n"
                          "‚Ä¢ S·ª≠ d·ª•ng `/firedelete on` ƒë·ªÉ b·∫≠t l·∫°i",
                    inline=False
                )
                
                embed.add_field(
                    name="üëë T·∫Øt b·ªüi",
                    value=ctx.author.mention,
                    inline=True
                )
                
                embed.set_footer(text="Fire Delete ƒë√£ ƒë∆∞·ª£c v√¥ hi·ªáu h√≥a")
                await ctx.reply(embed=embed, mention_author=True)
                
                logger.info(f"Fire Delete OFF: T·∫Øt b·ªüi {ctx.author} trong guild {ctx.guild.id}")
                
            elif action.lower() == 'status':
                # Xem tr·∫°ng th√°i
                is_enabled = self.is_fire_delete_enabled(ctx.guild.id)
                
                embed = discord.Embed(
                    title="üìä Tr·∫°ng th√°i Fire Delete",
                    color=discord.Color.green() if is_enabled else discord.Color.red(),
                    timestamp=datetime.now()
                )
                
                status_text = "üü¢ **ƒêANG B·∫¨T**" if is_enabled else "üî¥ **ƒêANG T·∫ÆT**"
                embed.add_field(
                    name="üî• Fire Delete",
                    value=status_text,
                    inline=True
                )
                
                if is_enabled:
                    embed.add_field(
                        name="‚úÖ Ho·∫°t ƒë·ªông",
                        value="Admin c√≥ th·ªÉ react üî• ƒë·ªÉ x√≥a tin nh·∫Øn",
                        inline=False
                    )
                else:
                    embed.add_field(
                        name="‚ùå Kh√¥ng ho·∫°t ƒë·ªông",
                        value="S·ª≠ d·ª•ng `/firedelete on` ƒë·ªÉ b·∫≠t",
                        inline=False
                    )
                
                embed.add_field(
                    name="üè† Server",
                    value=ctx.guild.name,
                    inline=True
                )
                
                embed.set_footer(text="Fire Delete Status")
                await ctx.reply(embed=embed, mention_author=True)
                
            elif action.lower() == 'history':
                # Xem l·ªãch s·ª≠ (ch·ªâ Supreme Admin)
                if not self.bot_instance.is_supreme_admin(ctx.author.id):
                    embed = discord.Embed(
                        title="‚ùå Kh√¥ng c√≥ quy·ªÅn",
                        description="Ch·ªâ Supreme Admin m·ªõi c√≥ th·ªÉ xem l·ªãch s·ª≠ Fire Delete!",
                        color=discord.Color.red()
                    )
                    await ctx.reply(embed=embed, mention_author=True)
                    return
                
                try:
                    # Gi·ªõi h·∫°n limit
                    limit = max(1, min(limit, 20))  # T·ª´ 1 ƒë·∫øn 20
                    
                    # Load history t·ª´ file
                    history_data = []
                    if os.path.exists(self.fire_delete_file):
                        with open(self.fire_delete_file, 'r', encoding='utf-8') as f:
                            data = json.load(f)
                            history_data = data.get('global_delete_history', [])
                    
                    # Filter theo guild hi·ªán t·∫°i
                    guild_history = [h for h in history_data if h.get('guild_id') == ctx.guild.id]
                    
                    if not guild_history:
                        embed = discord.Embed(
                            title="üìã L·ªãch s·ª≠ Fire Delete",
                            description="Ch∆∞a c√≥ l·ªãch s·ª≠ fire delete n√†o trong server n√†y!",
                            color=discord.Color.blue()
                        )
                        await ctx.reply(embed=embed, mention_author=True)
                        return
                    
                    # Hi·ªÉn th·ªã entries g·∫ßn nh·∫•t
                    recent_history = guild_history[-limit:]
                    
                    embed = discord.Embed(
                        title="üî• L·ªãch s·ª≠ Fire Delete",
                        description=f"**{len(recent_history)}** ho·∫°t ƒë·ªông g·∫ßn nh·∫•t:",
                        color=discord.Color.orange(),
                        timestamp=datetime.now()
                    )
                    
                    for entry in reversed(recent_history):  # Hi·ªÉn th·ªã t·ª´ m·ªõi nh·∫•t
                        success_emoji = "‚úÖ" if entry['success'] else "‚ùå"
                        
                        # L·∫•y th√¥ng tin admin
                        try:
                            admin = await self.bot.fetch_user(entry['admin_id'])
                            admin_info = f"{admin.display_name}"
                        except:
                            admin_info = f"Unknown Admin"
                        
                        # L·∫•y th√¥ng tin tin nh·∫Øn
                        msg_info = entry.get('message_info', {})
                        channel_name = msg_info.get('channel_name', 'Unknown')
                        author_name = msg_info.get('author_name', 'Unknown')
                        content_preview = msg_info.get('content_preview', 'No content')
                        
                        # Format timestamp
                        try:
                            timestamp = datetime.fromisoformat(entry['timestamp'])
                            time_str = timestamp.strftime("%d/%m/%Y %H:%M")
                        except:
                            time_str = "Unknown time"
                        
                        field_value = f"**Admin:** {admin_info}\n"
                        field_value += f"**Channel:** #{channel_name}\n"
                        field_value += f"**Author:** {author_name}\n"
                        field_value += f"**Content:** {content_preview[:50]}...\n"
                        if not entry['success']:
                            field_value += f"**Error:** {entry.get('error', 'Unknown')}\n"
                        field_value += f"**Time:** {time_str}"
                        
                        embed.add_field(
                            name=f"{success_emoji} Fire Delete",
                            value=field_value,
                            inline=False
                        )
                    
                    if len(guild_history) > limit:
                        embed.set_footer(text=f"Hi·ªÉn th·ªã {limit}/{len(guild_history)} ho·∫°t ƒë·ªông")
                    
                    await ctx.reply(embed=embed, mention_author=True)
                    
                except Exception as e:
                    embed = discord.Embed(
                        title="‚ùå L·ªói",
                        description=f"C√≥ l·ªói x·∫£y ra khi t·∫£i l·ªãch s·ª≠: {str(e)}",
                        color=discord.Color.red()
                    )
                    await ctx.reply(embed=embed, mention_author=True)
                    logger.error(f"L·ªói trong fire delete history: {e}")
                
            else:
                embed = discord.Embed(
                    title="‚ùå Action kh√¥ng h·ª£p l·ªá",
                    description=f"Action `{action}` kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£!",
                    color=discord.Color.red()
                )
                embed.add_field(
                    name="Actions h·ª£p l·ªá",
                    value="`on`, `off`, `status`, `history`",
                    inline=False
                )
                await ctx.reply(embed=embed, mention_author=True)
        
        logger.info("Fire Delete commands ƒë√£ ƒë∆∞·ª£c ƒëƒÉng k√Ω")
