import discord
from discord.ext import commands
from .base import BaseCommand
import logging
from utils.shared_wallet import shared_wallet
from datetime import datetime

logger = logging.getLogger(__name__)

class WalletCommands(BaseCommand):
    """Commands cho qu·∫£n l√Ω v√≠ ti·ªÅn chung"""
    
    async def _show_cash_leaderboard(self, ctx):
        """Hi·ªÉn th·ªã b·∫£ng x·∫øp h·∫°ng top 10 ng∆∞·ªùi gi√†u nh·∫•t"""
        try:
            users_with_money = shared_wallet.get_all_users_with_money()
            
            if not users_with_money:
                await ctx.reply(
                    f"{ctx.author.mention} ‚ÑπÔ∏è Ch∆∞a c√≥ ai c√≥ ti·ªÅn trong h·ªá th·ªëng!",
                    mention_author=True
                )
                return
            
            embed = discord.Embed(
                title="üèÜ B·∫£ng X·∫øp H·∫°ng Ti·ªÅn",
                description="Top 10 ng∆∞·ªùi gi√†u nh·∫•t trong h·ªá th·ªëng",
                color=discord.Color.gold(),
                timestamp=datetime.now()
            )
            
            medals = ["ü•á", "ü•à", "ü•â", "4Ô∏è‚É£", "5Ô∏è‚É£", "6Ô∏è‚É£", "7Ô∏è‚É£", "8Ô∏è‚É£", "9Ô∏è‚É£", "üîü"]
            top_10 = users_with_money[:10]
            
            leaderboard_text = ""
            for i, user_data in enumerate(top_10):
                try:
                    user = await self.bot.fetch_user(user_data['user_id'])
                    username = user.display_name if user else f"User {user_data['user_id']}"
                    
                    leaderboard_text += (
                        f"{medals[i]} **{username}**\n"
                        f"üí∞ S·ªë d∆∞: {user_data['balance']:,} xu\n\n"
                    )
                except:
                    leaderboard_text += (
                        f"{medals[i]} **User {user_data['user_id']}**\n"
                        f"üí∞ S·ªë d∆∞: {user_data['balance']:,} xu\n\n"
                    )
            
            embed.description = leaderboard_text if leaderboard_text else "Ch∆∞a c√≥ d·ªØ li·ªáu!"
            
            # Th√™m th·ªëng k√™ t·ªïng quan
            total_money = shared_wallet.get_total_money_in_system()
            user_count = shared_wallet.get_user_count()
            
            embed.add_field(
                name="üìä Th·ªëng k√™",
                value=(
                    f"‚Ä¢ **T·ªïng ti·ªÅn:** {total_money:,} xu\n"
                    f"‚Ä¢ **T·ªïng ng∆∞·ªùi ch∆°i:** {user_count} ng∆∞·ªùi\n"
                    f"‚Ä¢ **Trung b√¨nh:** {total_money // max(user_count, 1):,} xu/ng∆∞·ªùi"
                ),
                inline=False
            )
            
            embed.set_footer(text="Ch∆°i c√°c game ƒë·ªÉ tƒÉng s·ªë d∆∞!")
            
            await ctx.reply(embed=embed, mention_author=True)
            
        except Exception as e:
            logger.error(f"L·ªói trong cash top: {e}")
            await ctx.reply(
                f"{ctx.author.mention} ‚ùå C√≥ l·ªói x·∫£y ra khi xem b·∫£ng x·∫øp h·∫°ng!",
                mention_author=True
            )
    
    def register_commands(self):
        """ƒêƒÉng k√Ω c√°c l·ªánh wallet"""
        
        @self.bot.command(name='cash')
        async def check_cash(ctx, subcommand=None):
            """Xem s·ªë d∆∞ v√≠ chung ho·∫∑c b·∫£ng x·∫øp h·∫°ng
            
            Usage:
            - ;cash - Xem s·ªë d∆∞ c·ªßa b·∫°n
            - ;cash top - Xem top 10 ng∆∞·ªùi gi√†u nh·∫•t
            """
            try:
                # N·∫øu c√≥ subcommand l√† "top", hi·ªÉn th·ªã leaderboard
                if subcommand and subcommand.lower() == 'top':
                    await self._show_cash_leaderboard(ctx)
                    return
                balance = shared_wallet.get_balance(ctx.author.id)
                
                embed = discord.Embed(
                    title="üí∞ S·ªë D∆∞ V√≠ Chung",
                    description=f"**{balance:,} xu**",
                    color=discord.Color.gold(),
                    timestamp=datetime.now()
                )
                
                embed.set_author(
                    name=f"{ctx.author.display_name}",
                    icon_url=ctx.author.avatar.url if ctx.author.avatar else None
                )
                
                embed.add_field(
                    name="üéÆ Games h·ªó tr·ª£",
                    value=(
                        "‚Ä¢ **T√†i X·ªâu** (`;taixiu`)\n"
                        "‚Ä¢ **Rock Paper Scissors** (`;rps`)\n"
                        "‚Ä¢ **Slot Machine** (`;slot`)\n"
                        "‚Ä¢ **Blackjack** (`;blackjack`)\n"
                        "‚Ä¢ **Flip Coin** (`;flip`)"
                    ),
                    inline=False
                )
                
                embed.add_field(
                    name="üí° Th√¥ng tin",
                    value=(
                        "V√≠ n√†y ƒë∆∞·ª£c s·ª≠ d·ª•ng chung cho t·∫•t c·∫£ games\n"
                        "S·ªë d∆∞ ban ƒë·∫ßu: **1,000 xu**\n"
                        "Xem b·∫£ng x·∫øp h·∫°ng: `;wallet top`"
                    ),
                    inline=False
                )
                
                embed.set_footer(text="Ch∆°i c√≥ tr√°ch nhi·ªám!")
                
                await ctx.reply(embed=embed, mention_author=True)
                
            except Exception as e:
                logger.error(f"L·ªói trong cash command: {e}")
                await ctx.reply(
                    f"{ctx.author.mention} ‚ùå C√≥ l·ªói x·∫£y ra khi xem s·ªë d∆∞!",
                    mention_author=True
                )
        
        @self.bot.command(name='resetallmoney')
        async def reset_all_money(ctx):
            """Reset t·∫•t c·∫£ ti·ªÅn c·ªßa m·ªçi ng∆∞·ªùi (Supreme Admin only)"""
            try:
                # Ki·ªÉm tra quy·ªÅn Supreme Admin
                if not self.bot_instance.is_supreme_admin(ctx.author.id):
                    await ctx.reply(
                        f"{ctx.author.mention} ‚ùå Ch·ªâ Supreme Admin m·ªõi c√≥ th·ªÉ reset t·∫•t c·∫£ ti·ªÅn!",
                        mention_author=True
                    )
                    return
                
                # L·∫•y th·ªëng k√™ tr∆∞·ªõc khi reset
                users_with_money = shared_wallet.get_all_users_with_money()
                total_money_before = shared_wallet.get_total_money_in_system()
                user_count = shared_wallet.get_user_count()
                
                # Reset t·∫•t c·∫£ s·ªë d∆∞
                reset_count = shared_wallet.reset_all_balances()
                
                embed = discord.Embed(
                    title="üí∏ Reset T·∫•t C·∫£ Ti·ªÅn",
                    description="**ƒê√£ reset t·∫•t c·∫£ s·ªë d∆∞ v·ªÅ 0!**",
                    color=discord.Color.red(),
                    timestamp=datetime.now()
                )
                
                embed.add_field(
                    name="üìä Th·ªëng k√™ tr∆∞·ªõc reset",
                    value=(
                        f"‚Ä¢ **T·ªïng ti·ªÅn trong h·ªá th·ªëng:** {total_money_before:,} xu\n"
                        f"‚Ä¢ **S·ªë user c√≥ ti·ªÅn:** {len(users_with_money)} ng∆∞·ªùi\n"
                        f"‚Ä¢ **T·ªïng s·ªë user:** {user_count} ng∆∞·ªùi"
                    ),
                    inline=False
                )
                
                embed.add_field(
                    name="üîÑ K·∫øt qu·∫£ reset",
                    value=(
                        f"‚Ä¢ **S·ªë t√†i kho·∫£n ƒë√£ reset:** {reset_count}\n"
                        f"‚Ä¢ **T·ªïng ti·ªÅn ƒë√£ x√≥a:** {total_money_before:,} xu\n"
                        f"‚Ä¢ **Tr·∫°ng th√°i:** Ho√†n th√†nh"
                    ),
                    inline=False
                )
                
                if users_with_money:
                    top_users = users_with_money[:5]  # Top 5 user c√≥ nhi·ªÅu ti·ªÅn nh·∫•t
                    top_list = []
                    for i, user_data in enumerate(top_users, 1):
                        try:
                            user = self.bot.get_user(user_data['user_id'])
                            username = user.display_name if user else f"User {user_data['user_id']}"
                            top_list.append(f"{i}. {username}: {user_data['balance']:,} xu")
                        except:
                            top_list.append(f"{i}. User {user_data['user_id']}: {user_data['balance']:,} xu")
                    
                    embed.add_field(
                        name="üèÜ Top 5 user b·ªã reset nhi·ªÅu ti·ªÅn nh·∫•t",
                        value="\n".join(top_list),
                        inline=False
                    )
                
                embed.add_field(
                    name="‚ö†Ô∏è L∆∞u √Ω",
                    value=(
                        "‚Ä¢ T·∫•t c·∫£ user s·∫Ω nh·∫≠n 1,000 xu khi ch∆°i game l·∫ßn ƒë·∫ßu\n"
                        "‚Ä¢ H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c\n"
                        "‚Ä¢ M·ª•c ƒë√≠ch: Ch·ªëng l·∫°m ph√°t trong h·ªá th·ªëng"
                    ),
                    inline=False
                )
                
                embed.set_author(
                    name=f"Reset by {ctx.author.display_name}",
                    icon_url=ctx.author.avatar.url if ctx.author.avatar else None
                )
                
                await ctx.reply(embed=embed, mention_author=True)
                
            except Exception as e:
                logger.error(f"L·ªói trong resetallmoney command: {e}")
                await ctx.reply(
                    f"{ctx.author.mention} ‚ùå C√≥ l·ªói x·∫£y ra khi reset ti·ªÅn!",
                    mention_author=True
                )
        
        @self.bot.command(name='moneystats')
        async def money_stats(ctx):
            """Xem th·ªëng k√™ ti·ªÅn trong h·ªá th·ªëng (Admin+)"""
            try:
                # Ki·ªÉm tra quy·ªÅn admin
                is_admin = hasattr(self.bot_instance, 'admin_ids') and ctx.author.id in self.bot_instance.admin_ids
                is_supreme = self.bot_instance.is_supreme_admin(ctx.author.id)
                
                if not (is_admin or is_supreme):
                    await ctx.reply(
                        f"{ctx.author.mention} ‚ùå Ch·ªâ Admin tr·ªü l√™n m·ªõi c√≥ th·ªÉ xem th·ªëng k√™ ti·ªÅn!",
                        mention_author=True
                    )
                    return
                
                users_with_money = shared_wallet.get_all_users_with_money()
                total_money = shared_wallet.get_total_money_in_system()
                user_count = shared_wallet.get_user_count()
                
                embed = discord.Embed(
                    title="üìä Th·ªëng K√™ Ti·ªÅn H·ªá Th·ªëng",
                    color=discord.Color.blue(),
                    timestamp=datetime.now()
                )
                
                embed.add_field(
                    name="üí∞ T·ªïng quan",
                    value=(
                        f"‚Ä¢ **T·ªïng ti·ªÅn:** {total_money:,} xu\n"
                        f"‚Ä¢ **User c√≥ ti·ªÅn:** {len(users_with_money)}/{user_count}\n"
                        f"‚Ä¢ **Trung b√¨nh:** {total_money // max(len(users_with_money), 1):,} xu/ng∆∞·ªùi"
                    ),
                    inline=False
                )
                
                if users_with_money:
                    top_users = users_with_money[:10]  # Top 10
                    top_list = []
                    for i, user_data in enumerate(top_users, 1):
                        try:
                            user = self.bot.get_user(user_data['user_id'])
                            username = user.display_name if user else f"User {user_data['user_id']}"
                            top_list.append(f"{i}. {username}: {user_data['balance']:,} xu")
                        except:
                            top_list.append(f"{i}. User {user_data['user_id']}: {user_data['balance']:,} xu")
                    
                    embed.add_field(
                        name="üèÜ Top 10 Gi√†u Nh·∫•t",
                        value="\n".join(top_list),
                        inline=False
                    )
                
                embed.set_footer(text="D·ªØ li·ªáu t·ª´ v√≠ chung c·ªßa t·∫•t c·∫£ games")
                
                await ctx.reply(embed=embed, mention_author=True)
                
            except Exception as e:
                logger.error(f"L·ªói trong moneystats command: {e}")
                await ctx.reply(
                    f"{ctx.author.mention} ‚ùå C√≥ l·ªói x·∫£y ra khi xem th·ªëng k√™!",
                    mention_author=True
                )
        
        @self.bot.command(name='givemoney')
        async def give_money(ctx, user: discord.Member, amount: int):
            """Cho ti·ªÅn cho user (Supreme Admin only)"""
            try:
                # Ki·ªÉm tra quy·ªÅn Supreme Admin
                if not self.bot_instance.is_supreme_admin(ctx.author.id):
                    await ctx.reply(
                        f"{ctx.author.mention} ‚ùå Ch·ªâ Supreme Admin m·ªõi c√≥ th·ªÉ cho ti·ªÅn!",
                        mention_author=True
                    )
                    return
                
                if amount <= 0:
                    await ctx.reply(
                        f"{ctx.author.mention} ‚ùå S·ªë ti·ªÅn ph·∫£i l·ªõn h∆°n 0!",
                        mention_author=True
                    )
                    return
                
                old_balance = shared_wallet.get_balance(user.id)
                new_balance = shared_wallet.add_balance(user.id, amount)
                
                embed = discord.Embed(
                    title="üí∞ Cho Ti·ªÅn",
                    description=f"**ƒê√£ cho {amount:,} xu cho {user.display_name}**",
                    color=discord.Color.green(),
                    timestamp=datetime.now()
                )
                
                embed.add_field(
                    name="üìä Thay ƒë·ªïi s·ªë d∆∞",
                    value=(
                        f"‚Ä¢ **Tr∆∞·ªõc:** {old_balance:,} xu\n"
                        f"‚Ä¢ **Th√™m:** +{amount:,} xu\n"
                        f"‚Ä¢ **Sau:** {new_balance:,} xu"
                    ),
                    inline=False
                )
                
                embed.set_author(
                    name=f"Cho b·ªüi {ctx.author.display_name}",
                    icon_url=ctx.author.avatar.url if ctx.author.avatar else None
                )
                
                await ctx.reply(embed=embed, mention_author=True)
                
            except Exception as e:
                logger.error(f"L·ªói trong givemoney command: {e}")
                await ctx.reply(
                    f"{ctx.author.mention} ‚ùå C√≥ l·ªói x·∫£y ra khi cho ti·ªÅn!",
                    mention_author=True
                )
