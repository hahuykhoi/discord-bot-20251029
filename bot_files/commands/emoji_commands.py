# -*- coding: utf-8 -*-
"""
Emoji Commands - Th√™m emoji reaction v√†o tin nh·∫Øn
"""
import discord
from discord.ext import commands
import logging
import random
import asyncio
from .base import BaseCommand

logger = logging.getLogger(__name__)

class EmojiCommands(BaseCommand):
    """Class ch·ª©a c√°c commands emoji"""
    
    def register_commands(self):
        """Register emoji commands"""
        
        @self.bot.command(name='emoji', aliases=['react'])
        async def add_emoji(ctx, message_id: int = None, count: int = 1):
            """
            Th√™m custom emoji reaction ng·∫´u nhi√™n v√†o tin nh·∫Øn theo ID
            Ch·ªâ s·ª≠ d·ª•ng custom emoji c·ªßa server hi·ªán t·∫°i
            ‚ö° KH√îNG C√ì RATE LIMIT!
            
            Usage: 
            ;emoji <message_id> [s·ªë_l∆∞·ª£ng]
            ;emoji 1234567890123456789 5
            ;emoji 1234567890123456789 10
            """
            # B·ªè rate limit - g·ªçi tr·ª±c ti·∫øp implementation
            await self._add_emoji_impl(ctx, message_id, count)
    
    async def _add_emoji_impl(self, ctx, message_id: int, count: int = 1):
        """
        Implementation th·ª±c t·∫ø c·ªßa emoji command
        """
        try:
            # Ki·ªÉm tra n·∫øu kh√¥ng c√≥ message_id
            if message_id is None:
                error_embed = discord.Embed(
                    title="‚ùå Thi·∫øu th√¥ng tin",
                    description="Vui l√≤ng cung c·∫•p ID tin nh·∫Øn c·∫ßn th√™m emoji reaction!",
                    color=discord.Color.red()
                )
                error_embed.add_field(
                    name="C√°ch s·ª≠ d·ª•ng",
                    value="; <message_id> [s·ªë_l∆∞·ª£ng]`\n**V√≠ d·ª•:** ; 1234567890123456789 5`",
                    inline=False
                )
                error_embed.add_field(
                    name="üí° Tham s·ªë",
                    value="‚Ä¢ `message_id`: ID tin nh·∫Øn c·∫ßn react\n‚Ä¢ `s·ªë_l∆∞·ª£ng`: S·ªë custom emoji mu·ªën th√™m (m·∫∑c ƒë·ªãnh: 1)",
                    inline=False
                )
                error_embed.add_field(
                    name="üí° C√°ch l·∫•y Message ID",
                    value=(
                        "1. B·∫≠t Developer Mode trong Discord\n"
                        "2. Click ph·∫£i v√†o tin nh·∫Øn\n"
                        "3. Ch·ªçn 'Copy Message ID'"
                    ),
                    inline=False
                )
                await ctx.reply(embed=error_embed, mention_author=True)
                return
            
            # L·∫•y s·ªë emoji c·ªßa server tr∆∞·ªõc ƒë·ªÉ validate - ch·ªâ emoji available
            guild_emojis = [emoji for emoji in ctx.guild.emojis if emoji.available] if ctx.guild and ctx.guild.emojis else []
            max_emojis = len(guild_emojis)
            
            # Validate count parameter
            if count < 1:
                count = 1
            elif count > max_emojis and max_emojis > 0:  # Gi·ªõi h·∫°n theo s·ªë emoji c·ªßa server
                error_embed = discord.Embed(
                    title="‚ö†Ô∏è Gi·ªõi h·∫°n s·ªë l∆∞·ª£ng",
                    description=f"Server ch·ªâ c√≥ {max_emojis} custom emoji. B·∫°n ƒë√£ nh·∫≠p: {count}",
                    color=discord.Color.orange()
                )
                error_embed.add_field(
                    name="üí° G·ª£i √Ω",
                    value=f"S·ª≠ d·ª•ng s·ªë t·ª´ 1-{max_emojis} ƒë·ªÉ th√™m emoji reactions\n‚ö†Ô∏è **Discord limit**: T·ªëi ƒëa 20 reactions per message",
                    inline=False
                )
                await ctx.reply(embed=error_embed, mention_author=True)
                return
            
            # S·ª≠ d·ª•ng emoji ƒë√£ l·∫•y t·ª´ validation
            all_emojis = guild_emojis
            
            if not all_emojis:
                error_embed = discord.Embed(
                    title="‚ùå Server kh√¥ng c√≥ custom emoji",
                    description="Server n√†y ch∆∞a c√≥ custom emoji n√†o ƒë·ªÉ s·ª≠ d·ª•ng!",
                    color=discord.Color.red()
                )
                error_embed.add_field(
                    name="üí° Gi·∫£i ph√°p",
                    value=(
                        "‚Ä¢ Server c·∫ßn c√≥ custom emoji ƒë·ªÉ s·ª≠ d·ª•ng l·ªánh n√†y\n"
                        "‚Ä¢ Admin c√≥ th·ªÉ th√™m emoji trong Server Settings > Emoji\n"
                        "‚Ä¢ Ho·∫∑c upload emoji m·ªõi t·ª´ file ·∫£nh"
                    ),
                    inline=False
                )
                await ctx.reply(embed=error_embed, mention_author=True)
                return
            
            # T√¨m tin nh·∫Øn theo ID trong channel hi·ªán t·∫°i
            try:
                target_message = await ctx.channel.fetch_message(message_id)
            except discord.NotFound:
                # Th·ª≠ t√¨m trong c√°c channel kh√°c c·ªßa server
                target_message = None
                for channel in ctx.guild.text_channels:
                    if channel.permissions_for(ctx.guild.me).read_messages:
                        try:
                            target_message = await channel.fetch_message(message_id)
                            break
                        except (discord.NotFound, discord.Forbidden):
                            continue
                
                if not target_message:
                    error_embed = discord.Embed(
                        title="‚ùå Kh√¥ng t√¨m th·∫•y tin nh·∫Øn",
                        description=f"Kh√¥ng t√¨m th·∫•y tin nh·∫Øn v·ªõi ID: `{message_id}`",
                        color=discord.Color.red()
                    )
                    error_embed.add_field(
                        name="Nguy√™n nh√¢n c√≥ th·ªÉ",
                        value=(
                            "‚Ä¢ Tin nh·∫Øn kh√¥ng t·ªìn t·∫°i\n"
                            "‚Ä¢ Tin nh·∫Øn ƒë√£ b·ªã x√≥a\n"
                            "‚Ä¢ Bot kh√¥ng c√≥ quy·ªÅn truy c·∫≠p channel ch·ª©a tin nh·∫Øn\n"
                            "‚Ä¢ Message ID kh√¥ng ch√≠nh x√°c"
                        ),
                        inline=False
                    )
                    await ctx.reply(embed=error_embed, mention_author=True)
                    return
            
            except discord.Forbidden:
                error_embed = discord.Embed(
                    title="‚ùå Kh√¥ng c√≥ quy·ªÅn",
                    description="Bot kh√¥ng c√≥ quy·ªÅn ƒë·ªçc tin nh·∫Øn trong channel n√†y!",
                    color=discord.Color.red()
                )
                await ctx.reply(embed=error_embed, mention_author=True)
                return
            
            # Filter emoji ƒë·ªÉ ch·ªâ l·∫•y nh·ªØng emoji bot c√≥ th·ªÉ s·ª≠ d·ª•ng
            usable_emojis = []
            for emoji in all_emojis:
                # Ki·ªÉm tra emoji c√≥ available v√† bot c√≥ th·ªÉ s·ª≠ d·ª•ng
                if hasattr(emoji, 'available') and emoji.available:
                    # Ki·ªÉm tra bot c√≥ quy·ªÅn s·ª≠ d·ª•ng emoji n√†y kh√¥ng
                    if emoji.guild_id == ctx.guild.id:  # Ch·ªâ emoji c·ªßa server hi·ªán t·∫°i
                        usable_emojis.append(emoji)
            
            # C·∫≠p nh·∫≠t all_emojis v·ªõi emoji ƒë√£ filter
            all_emojis = usable_emojis
            
            if not all_emojis:
                error_embed = discord.Embed(
                    title="‚ùå Kh√¥ng c√≥ emoji kh·∫£ d·ª•ng",
                    description="Server kh√¥ng c√≥ custom emoji n√†o c√≥ th·ªÉ s·ª≠ d·ª•ng!",
                    color=discord.Color.red()
                )
                error_embed.add_field(
                    name="üí° Nguy√™n nh√¢n c√≥ th·ªÉ",
                    value=(
                        "‚Ä¢ T·∫•t c·∫£ emoji ƒë√£ b·ªã disable\n"
                        "‚Ä¢ Bot kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng emoji\n"
                        "‚Ä¢ Emoji b·ªã l·ªói ho·∫∑c kh√¥ng kh·∫£ d·ª•ng"
                    ),
                    inline=False
                )
                await ctx.reply(embed=error_embed, mention_author=True)
                return
            
            # Ch·ªçn emoji ng·∫´u nhi√™n (kh√¥ng tr√πng l·∫∑p)
            selected_emojis = random.sample(all_emojis, min(count, len(all_emojis)))
            
            # Th√™m reactions v√†o tin nh·∫Øn
            added_emojis = []
            failed_emojis = []
            
            try:
                # Th√¥ng b√°o b·∫Øt ƒë·∫ßu process (n·∫øu nhi·ªÅu emoji)
                if count > 1:
                    processing_embed = discord.Embed(
                        title="üîÑ ƒêang th√™m emoji reactions...",
                        description=f"ƒêang th√™m {count} emoji reactions v√†o tin nh·∫Øn...",
                        color=discord.Color.blue()
                    )
                    processing_msg = await ctx.reply(embed=processing_embed, mention_author=True)
                
                # Th√™m t·ª´ng emoji
                for emoji in selected_emojis:
                    try:
                        await target_message.add_reaction(emoji)
                        added_emojis.append(emoji)
                        
                        # Delay nh·ªè ƒë·ªÉ tr√°nh rate limit Discord API
                        if len(selected_emojis) > 5:
                            await asyncio.sleep(0.2)
                            
                    except discord.HTTPException as e:
                        failed_emojis.append(emoji)
                        # Check if it's Discord's 20 reaction limit
                        if "30010" in str(e) or "Maximum number of reactions reached" in str(e):
                            logger.info(f"Discord 20-reaction limit reached at emoji {len(added_emojis) + 1}")
                            # Stop trying to add more emojis once we hit the limit
                            break
                        # Check if it's Unknown Emoji error
                        elif "10014" in str(e) or "Unknown Emoji" in str(e):
                            logger.warning(f"Unknown emoji (possibly from another server): {emoji}")
                        else:
                            logger.warning(f"Failed to add emoji {emoji}: {e}")
                        continue
                
                # T·∫°o display string cho emojis ƒë√£ th√™m
                emoji_displays = []
                for emoji in added_emojis[:10]:  # Hi·ªÉn th·ªã t·ªëi ƒëa 10 emoji trong embed
                    if isinstance(emoji, str):
                        emoji_displays.append(str(emoji))
                    else:
                        emoji_displays.append(f"<:{emoji.name}:{emoji.id}>")
                
                # Th√¥ng b√°o th√†nh c√¥ng
                success_title = f"‚úÖ ƒê√£ th√™m {len(added_emojis)} emoji reaction{'s' if len(added_emojis) > 1 else ''}!"
                success_desc = f"ƒê√£ th√™m {len(added_emojis)}/{count} emoji v√†o tin nh·∫Øn"
                
                if failed_emojis:
                    # Check if we hit Discord's 20 reaction limit
                    if len(added_emojis) >= 20:
                        success_desc += f"\n‚ö†Ô∏è **Discord limit**: ƒê√£ ƒë·∫°t gi·ªõi h·∫°n 20 reactions per message"
                        success_desc += f"\n‚ùå {len(failed_emojis)} emoji kh√¥ng th·ªÉ th√™m do gi·ªõi h·∫°n Discord"
                    else:
                        success_desc += f"\n‚ö†Ô∏è {len(failed_emojis)} emoji kh√¥ng th·ªÉ th√™m ƒë∆∞·ª£c"
                
                success_embed = discord.Embed(
                    title=success_title,
                    description=success_desc,
                    color=discord.Color.green()
                )
                success_embed.add_field(
                    name="üìç Tin nh·∫Øn",
                    value=f"[ƒê·∫øn tin nh·∫Øn]({target_message.jump_url})",
                    inline=True
                )
                success_embed.add_field(
                    name="üéØ Emoji ƒë√£ th√™m",
                    value=" ".join(emoji_displays) if emoji_displays else "Kh√¥ng c√≥ emoji n√†o ƒë∆∞·ª£c th√™m",
                    inline=False
                )
                
                if len(added_emojis) > 10:
                    success_embed.add_field(
                        name="‚ûï V√† nhi·ªÅu h∆°n...",
                        value=f"C√≤n {len(added_emojis) - 10} emoji kh√°c ƒë√£ ƒë∆∞·ª£c th√™m",
                        inline=False
                    )
                
                # Th√¥ng tin Discord limit
                discord_limit_info = ""
                if len(added_emojis) >= 20:
                    discord_limit_info = f"\nüö´ **Discord limit**: 20 reactions max per message"
                elif count > 20:
                    discord_limit_info = f"\nüí° **L∆∞u √Ω**: Discord gi·ªõi h·∫°n 20 reactions per message"
                
                success_embed.add_field(
                    name="üìä Th·ªëng k√™",
                    value=(
                        f"**Channel:** {target_message.channel.mention}\n"
                        f"**Y√™u c·∫ßu:** {count} emoji\n"
                        f"**Th√†nh c√¥ng:** {len(added_emojis)} emoji\n"
                        f"**Th·∫•t b·∫°i:** {len(failed_emojis)} emoji\n"
                        f"**Server emoji:** {len(all_emojis)} custom emoji\n"
                        f"‚ö° **Kh√¥ng c√≥ rate limit!**"
                        f"{discord_limit_info}"
                    ),
                    inline=False
                )
                
                # Update ho·∫∑c reply v·ªõi k·∫øt qu·∫£
                if count > 1 and 'processing_msg' in locals():
                    await processing_msg.edit(embed=success_embed)
                else:
                    await ctx.reply(embed=success_embed, mention_author=True)
                
                # Log activity
                logger.info(f"{len(added_emojis)} emojis added to message {message_id} by {ctx.author} ({ctx.author.id})")
                
            except discord.Forbidden:
                error_embed = discord.Embed(
                    title="‚ùå Kh√¥ng c√≥ quy·ªÅn",
                    description="Bot kh√¥ng c√≥ quy·ªÅn th√™m reaction trong channel ƒë√≥!",
                    color=discord.Color.red()
                )
                error_embed.add_field(
                    name="Quy·ªÅn c·∫ßn thi·∫øt",
                    value="‚Ä¢ Add Reactions\n‚Ä¢ Read Message History\n‚Ä¢ Use External Emojis (n·∫øu d√πng custom emoji)",
                    inline=False
                )
                await ctx.reply(embed=error_embed, mention_author=True)
                
            except discord.HTTPException as e:
                if "reaction" in str(e).lower():
                    error_embed = discord.Embed(
                        title="‚ùå L·ªói reaction",
                        description="Kh√¥ng th·ªÉ th√™m reaction n√†y!",
                        color=discord.Color.red()
                    )
                    error_embed.add_field(
                        name="Nguy√™n nh√¢n c√≥ th·ªÉ",
                        value=(
                            "‚Ä¢ Emoji kh√¥ng kh·∫£ d·ª•ng\n"
                            "‚Ä¢ Tin nh·∫Øn ƒë√£ c√≥ qu√° nhi·ªÅu reaction\n"
                            "‚Ä¢ Emoji b·ªã l·ªói ho·∫∑c ƒë√£ b·ªã x√≥a\n"
                            "‚Ä¢ Bot ƒë√£ react emoji n√†y r·ªìi"
                        ),
                        inline=False
                    )
                else:
                    error_embed = discord.Embed(
                        title="‚ùå L·ªói Discord API",
                        description=f"L·ªói khi th√™m reaction: {str(e)[:200]}",
                        color=discord.Color.red()
                    )
                await ctx.reply(embed=error_embed, mention_author=True)
                logger.error(f"HTTPException when adding reaction: {e}")
                
        except Exception as e:
            error_embed = discord.Embed(
                title="‚ùå L·ªói h·ªá th·ªëng",
                description=f"C√≥ l·ªói x·∫£y ra khi th√™m emoji: {str(e)[:200]}",
                color=discord.Color.red()
            )
            await ctx.reply(embed=error_embed, mention_author=True)
            logger.error(f"Error in emoji command: {e}")
