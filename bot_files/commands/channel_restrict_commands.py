# -*- coding: utf-8 -*-
"""
Channel Restriction Commands - Gi·ªõi h·∫°n chat channel cho users
Supreme Admin c√≥ th·ªÉ chat m·ªçi n∆°i, users b·ªã gi·ªõi h·∫°n ch·ªâ chat ƒë∆∞·ª£c ·ªü channel ƒë∆∞·ª£c ph√©p
"""
import discord
from discord.ext import commands
import json
import os
from datetime import datetime
import logging

logger = logging.getLogger(__name__)

class ChannelRestrictCommands:
    def __init__(self, bot_instance):
        self.bot_instance = bot_instance
        self.bot = bot_instance.bot
        self.data_folder = 'data'
        self.channel_restrict_file = os.path.join(self.data_folder, 'channel_restrictions.json')
        
        # T·∫°o data folder n·∫øu ch∆∞a c√≥
        if not os.path.exists(self.data_folder):
            os.makedirs(self.data_folder)
            
        self.channel_restrictions = {}  # {guild_id: {user_id: [allowed_channel_ids], 'global_restricted_users': [user_ids]}}
        self.load_channel_restrictions()
    
    def load_channel_restrictions(self):
        """T·∫£i c·∫•u h√¨nh gi·ªõi h·∫°n channel t·ª´ file JSON"""
        try:
            if os.path.exists(self.channel_restrict_file):
                with open(self.channel_restrict_file, 'r', encoding='utf-8') as f:
                    data = json.load(f)
                    # Convert string keys back to int
                    self.channel_restrictions = {}
                    for guild_id, guild_data in data.items():
                        guild_id_int = int(guild_id)
                        self.channel_restrictions[guild_id_int] = {}
                        
                        for key, value in guild_data.items():
                            if key == 'global_restricted_users':
                                self.channel_restrictions[guild_id_int][key] = [int(uid) for uid in value]
                            else:
                                user_id_int = int(key)
                                self.channel_restrictions[guild_id_int][user_id_int] = [int(cid) for cid in value]
                                
                logger.info(f"ƒê√£ t·∫£i {len(self.channel_restrictions)} guild channel restrictions")
            else:
                self.channel_restrictions = {}
                logger.info("Ch∆∞a c√≥ file channel restrictions, t·∫°o m·ªõi")
        except Exception as e:
            logger.error(f"L·ªói khi t·∫£i channel restrictions: {e}")
            self.channel_restrictions = {}
    
    def save_channel_restrictions(self):
        """L∆∞u c·∫•u h√¨nh gi·ªõi h·∫°n channel v√†o file JSON"""
        try:
            # Convert int keys to string for JSON
            data_to_save = {}
            for guild_id, guild_data in self.channel_restrictions.items():
                guild_data_str = {}
                for key, value in guild_data.items():
                    if key == 'global_restricted_users':
                        guild_data_str[key] = [str(uid) for uid in value]
                    else:
                        guild_data_str[str(key)] = [str(cid) for cid in value]
                data_to_save[str(guild_id)] = guild_data_str
            
            with open(self.channel_restrict_file, 'w', encoding='utf-8') as f:
                json.dump(data_to_save, f, indent=4, ensure_ascii=False)
            logger.info("ƒê√£ l∆∞u channel restrictions")
        except Exception as e:
            logger.error(f"L·ªói khi l∆∞u channel restrictions: {e}")
    
    def is_user_channel_restricted(self, guild_id: int, user_id: int, channel_id: int) -> bool:
        """Ki·ªÉm tra user c√≥ b·ªã gi·ªõi h·∫°n channel kh√¥ng"""
        try:
            # Supreme Admin kh√¥ng b·ªã gi·ªõi h·∫°n
            if user_id == self.bot_instance.supreme_admin_id:
                return False
            
            # Admin kh√¥ng b·ªã gi·ªõi h·∫°n
            if self.bot_instance.is_admin(user_id):
                return False
            
            guild_data = self.channel_restrictions.get(guild_id, {})
            
            # Ki·ªÉm tra user c√≥ trong danh s√°ch b·ªã gi·ªõi h·∫°n kh√¥ng
            if user_id in guild_data:
                allowed_channels = guild_data[user_id]
                return channel_id not in allowed_channels
            
            # Ki·ªÉm tra global restriction
            global_restricted = guild_data.get('global_restricted_users', [])
            if user_id in global_restricted:
                return True  # B·ªã c·∫•m chat to√†n b·ªô server
            
            return False  # Kh√¥ng b·ªã gi·ªõi h·∫°n
            
        except Exception as e:
            logger.error(f"L·ªói ki·ªÉm tra channel restriction: {e}")
            return False
    
    def add_channel_restriction(self, guild_id: int, user_id: int, allowed_channels: list):
        """Th√™m gi·ªõi h·∫°n channel cho user"""
        if guild_id not in self.channel_restrictions:
            self.channel_restrictions[guild_id] = {}
        
        self.channel_restrictions[guild_id][user_id] = allowed_channels
        self.save_channel_restrictions()
    
    def remove_channel_restriction(self, guild_id: int, user_id: int):
        """B·ªè gi·ªõi h·∫°n channel cho user"""
        if guild_id in self.channel_restrictions and user_id in self.channel_restrictions[guild_id]:
            del self.channel_restrictions[guild_id][user_id]
            self.save_channel_restrictions()
            return True
        return False
    
    def add_global_restriction(self, guild_id: int, user_id: int):
        """C·∫•m user chat to√†n b·ªô server"""
        if guild_id not in self.channel_restrictions:
            self.channel_restrictions[guild_id] = {}
        
        if 'global_restricted_users' not in self.channel_restrictions[guild_id]:
            self.channel_restrictions[guild_id]['global_restricted_users'] = []
        
        if user_id not in self.channel_restrictions[guild_id]['global_restricted_users']:
            self.channel_restrictions[guild_id]['global_restricted_users'].append(user_id)
            self.save_channel_restrictions()
            return True
        return False
    
    def remove_global_restriction(self, guild_id: int, user_id: int):
        """B·ªè c·∫•m chat to√†n b·ªô server cho user"""
        if (guild_id in self.channel_restrictions and 
            'global_restricted_users' in self.channel_restrictions[guild_id] and
            user_id in self.channel_restrictions[guild_id]['global_restricted_users']):
            
            self.channel_restrictions[guild_id]['global_restricted_users'].remove(user_id)
            self.save_channel_restrictions()
            return True
        return False
    
    async def handle_channel_restrict_message(self, message):
        """X·ª≠ l√Ω tin nh·∫Øn - x√≥a n·∫øu user vi ph·∫°m gi·ªõi h·∫°n channel"""
        try:
            # B·ªè qua bot messages
            if message.author.bot:
                return False
            
            # B·ªè qua DM
            if not message.guild:
                return False
            
            guild_id = message.guild.id
            user_id = message.author.id
            channel_id = message.channel.id
            
            # Ki·ªÉm tra user c√≥ b·ªã gi·ªõi h·∫°n channel kh√¥ng
            if self.is_user_channel_restricted(guild_id, user_id, channel_id):
                # X√≥a tin nh·∫Øn vi ph·∫°m
                try:
                    await message.delete()
                    
                    # G·ª≠i th√¥ng b√°o ri√™ng t∆∞ cho user
                    embed = discord.Embed(
                        title="üö´ Tin nh·∫Øn b·ªã x√≥a",
                        description="B·∫°n kh√¥ng ƒë∆∞·ª£c ph√©p chat trong channel n√†y!",
                        color=discord.Color.red(),
                        timestamp=datetime.now()
                    )
                    
                    embed.add_field(
                        name="üìç Channel b·ªã c·∫•m",
                        value=f"<#{channel_id}>",
                        inline=True
                    )
                    
                    # Hi·ªÉn th·ªã channels ƒë∆∞·ª£c ph√©p (n·∫øu c√≥)
                    guild_data = self.channel_restrictions.get(guild_id, {})
                    if user_id in guild_data:
                        allowed_channels = guild_data[user_id]
                        if allowed_channels:
                            channels_text = '\n'.join([f"<#{cid}>" for cid in allowed_channels])
                            embed.add_field(
                                name="‚úÖ Channels ƒë∆∞·ª£c ph√©p",
                                value=channels_text,
                                inline=False
                            )
                    else:
                        embed.add_field(
                            name="‚õî Tr·∫°ng th√°i",
                            value="B·∫°n b·ªã c·∫•m chat to√†n b·ªô server",
                            inline=False
                        )
                    
                    embed.add_field(
                        name="üí° Li√™n h·ªá",
                        value="Li√™n h·ªá Admin ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£",
                        inline=False
                    )
                    
                    try:
                        await message.author.send(embed=embed)
                    except:
                        # N·∫øu kh√¥ng g·ª≠i ƒë∆∞·ª£c DM, g·ª≠i trong channel r·ªìi x√≥a sau 5s
                        warning_msg = await message.channel.send(
                            f"{message.author.mention} B·∫°n kh√¥ng ƒë∆∞·ª£c ph√©p chat trong channel n√†y!", 
                            delete_after=5
                        )
                    
                    logger.info(f"ƒê√£ x√≥a tin nh·∫Øn vi ph·∫°m channel restriction: {user_id} trong {channel_id}")
                    return True
                    
                except discord.Forbidden:
                    logger.warning(f"Kh√¥ng c√≥ quy·ªÅn x√≥a tin nh·∫Øn trong {channel_id}")
                except Exception as e:
                    logger.error(f"L·ªói khi x√≥a tin nh·∫Øn vi ph·∫°m: {e}")
            
            return False
            
        except Exception as e:
            logger.error(f"L·ªói trong handle_channel_restrict_message: {e}")
            return False
    
    async def handle_restrict_command(self, ctx, action: str = None, user: discord.Member = None, *channels):
        """X·ª≠ l√Ω l·ªánh restrict channel"""
        
        # Ki·ªÉm tra quy·ªÅn admin
        if not self.bot_instance.is_admin(ctx.author.id):
            embed = discord.Embed(
                title="‚ùå Kh√¥ng c√≥ quy·ªÅn",
                description="Ch·ªâ Admin m·ªõi c√≥ th·ªÉ s·ª≠ d·ª•ng l·ªánh n√†y!",
                color=discord.Color.red()
            )
            await ctx.reply(embed=embed, mention_author=True)
            return
        
        if not action:
            # Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n
            embed = discord.Embed(
                title="üîí Channel Restriction System",
                description="H·ªá th·ªëng gi·ªõi h·∫°n chat channel cho users",
                color=discord.Color.blue(),
                timestamp=datetime.now()
            )
            
            embed.add_field(
                name="üìù C√°c l·ªánh c√≥ s·∫µn",
                value="`/restrict add @user #channel1 #channel2` - Gi·ªõi h·∫°n user ch·ªâ chat ƒë∆∞·ª£c ·ªü channels ch·ªâ ƒë·ªãnh\n"
                      "`/restrict remove @user` - B·ªè gi·ªõi h·∫°n channel cho user\n"
                      "`/restrict ban @user` - C·∫•m user chat to√†n b·ªô server\n"
                      "`/restrict unban @user` - B·ªè c·∫•m chat to√†n b·ªô server\n"
                      "`/restrict list` - Xem danh s√°ch users b·ªã gi·ªõi h·∫°n\n"
                      "`/restrict check @user` - Ki·ªÉm tra tr·∫°ng th√°i gi·ªõi h·∫°n c·ªßa user",
                inline=False
            )
            
            embed.add_field(
                name="üëë Quy·ªÅn ƒë·∫∑c bi·ªát",
                value="‚Ä¢ **Supreme Admin**: Chat ƒë∆∞·ª£c m·ªçi n∆°i, kh√¥ng b·ªã gi·ªõi h·∫°n\n"
                      "‚Ä¢ **Admin**: Chat ƒë∆∞·ª£c m·ªçi n∆°i, qu·∫£n l√Ω restrictions\n"
                      "‚Ä¢ **User**: B·ªã gi·ªõi h·∫°n theo c·∫•u h√¨nh",
                inline=False
            )
            
            embed.add_field(
                name="‚ö†Ô∏è L∆∞u √Ω",
                value="‚Ä¢ User b·ªã restrict s·∫Ω c√≥ tin nh·∫Øn b·ªã x√≥a t·ª± ƒë·ªông\n"
                      "‚Ä¢ Nh·∫≠n th√¥ng b√°o ri√™ng t∆∞ khi vi ph·∫°m\n"
                      "‚Ä¢ Supreme Admin v√† Admin kh√¥ng bao gi·ªù b·ªã gi·ªõi h·∫°n",
                inline=False
            )
            
            await ctx.reply(embed=embed, mention_author=True)
            return
        
        guild_id = ctx.guild.id
        
        if action.lower() == 'add':
            if not user:
                embed = discord.Embed(
                    title="‚ùå Thi·∫øu th√¥ng tin",
                    description="Vui l√≤ng mention user c·∫ßn gi·ªõi h·∫°n!",
                    color=discord.Color.red()
                )
                embed.add_field(
                    name="üí° C√°ch s·ª≠ d·ª•ng",
                    value="`/restrict add @user #channel1 #channel2`",
                    inline=False
                )
                await ctx.reply(embed=embed, mention_author=True)
                return
            
            # Kh√¥ng th·ªÉ restrict admin
            if self.bot_instance.is_admin(user.id) or user.id == self.bot_instance.supreme_admin_id:
                embed = discord.Embed(
                    title="‚ùå Kh√¥ng th·ªÉ gi·ªõi h·∫°n",
                    description="Kh√¥ng th·ªÉ gi·ªõi h·∫°n Admin ho·∫∑c Supreme Admin!",
                    color=discord.Color.red()
                )
                await ctx.reply(embed=embed, mention_author=True)
                return
            
            if not channels:
                embed = discord.Embed(
                    title="‚ùå Thi·∫øu channels",
                    description="Vui l√≤ng ch·ªâ ƒë·ªãnh √≠t nh·∫•t 1 channel ƒë∆∞·ª£c ph√©p!",
                    color=discord.Color.red()
                )
                embed.add_field(
                    name="üí° C√°ch s·ª≠ d·ª•ng",
                    value="`/restrict add @user #channel1 #channel2`",
                    inline=False
                )
                await ctx.reply(embed=embed, mention_author=True)
                return
            
            # Parse channels
            allowed_channel_ids = []
            channel_mentions = []
            
            for channel_mention in channels:
                # X·ª≠ l√Ω channel mention ho·∫∑c ID
                if channel_mention.startswith('<#') and channel_mention.endswith('>'):
                    channel_id = int(channel_mention[2:-1])
                elif channel_mention.isdigit():
                    channel_id = int(channel_mention)
                else:
                    continue
                
                channel = ctx.guild.get_channel(channel_id)
                if channel:
                    allowed_channel_ids.append(channel_id)
                    channel_mentions.append(f"<#{channel_id}>")
            
            if not allowed_channel_ids:
                embed = discord.Embed(
                    title="‚ùå Channels kh√¥ng h·ª£p l·ªá",
                    description="Kh√¥ng t√¨m th·∫•y channels h·ª£p l·ªá n√†o!",
                    color=discord.Color.red()
                )
                await ctx.reply(embed=embed, mention_author=True)
                return
            
            # Th√™m restriction
            self.add_channel_restriction(guild_id, user.id, allowed_channel_ids)
            
            embed = discord.Embed(
                title="‚úÖ ƒê√£ gi·ªõi h·∫°n channel",
                description=f"User {user.mention} ch·ªâ ƒë∆∞·ª£c chat trong c√°c channels ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh",
                color=discord.Color.green(),
                timestamp=datetime.now()
            )
            
            embed.add_field(
                name="üë§ User b·ªã gi·ªõi h·∫°n",
                value=f"{user.mention} (`{user.id}`)",
                inline=True
            )
            
            embed.add_field(
                name="üìç Channels ƒë∆∞·ª£c ph√©p",
                value='\n'.join(channel_mentions),
                inline=False
            )
            
            embed.add_field(
                name="‚ö†Ô∏è L∆∞u √Ω",
                value="Tin nh·∫Øn ·ªü channels kh√°c s·∫Ω b·ªã x√≥a t·ª± ƒë·ªông",
                inline=False
            )
            
            await ctx.reply(embed=embed, mention_author=True)
            
        elif action.lower() == 'remove':
            if not user:
                embed = discord.Embed(
                    title="‚ùå Thi·∫øu th√¥ng tin",
                    description="Vui l√≤ng mention user c·∫ßn b·ªè gi·ªõi h·∫°n!",
                    color=discord.Color.red()
                )
                await ctx.reply(embed=embed, mention_author=True)
                return
            
            # B·ªè restriction
            success = self.remove_channel_restriction(guild_id, user.id)
            
            if success:
                embed = discord.Embed(
                    title="‚úÖ ƒê√£ b·ªè gi·ªõi h·∫°n channel",
                    description=f"User {user.mention} c√≥ th·ªÉ chat t·ª± do trong t·∫•t c·∫£ channels",
                    color=discord.Color.green(),
                    timestamp=datetime.now()
                )
            else:
                embed = discord.Embed(
                    title="‚ö†Ô∏è User kh√¥ng b·ªã gi·ªõi h·∫°n",
                    description=f"User {user.mention} kh√¥ng c√≥ gi·ªõi h·∫°n channel n√†o",
                    color=discord.Color.orange()
                )
            
            await ctx.reply(embed=embed, mention_author=True)
            
        elif action.lower() == 'ban':
            if not user:
                embed = discord.Embed(
                    title="‚ùå Thi·∫øu th√¥ng tin",
                    description="Vui l√≤ng mention user c·∫ßn c·∫•m chat!",
                    color=discord.Color.red()
                )
                await ctx.reply(embed=embed, mention_author=True)
                return
            
            # Kh√¥ng th·ªÉ ban admin
            if self.bot_instance.is_admin(user.id) or user.id == self.bot_instance.supreme_admin_id:
                embed = discord.Embed(
                    title="‚ùå Kh√¥ng th·ªÉ c·∫•m",
                    description="Kh√¥ng th·ªÉ c·∫•m chat Admin ho·∫∑c Supreme Admin!",
                    color=discord.Color.red()
                )
                await ctx.reply(embed=embed, mention_author=True)
                return
            
            # Th√™m global restriction
            success = self.add_global_restriction(guild_id, user.id)
            
            if success:
                embed = discord.Embed(
                    title="üö´ ƒê√£ c·∫•m chat to√†n server",
                    description=f"User {user.mention} kh√¥ng th·ªÉ chat trong b·∫•t k·ª≥ channel n√†o",
                    color=discord.Color.red(),
                    timestamp=datetime.now()
                )
            else:
                embed = discord.Embed(
                    title="‚ö†Ô∏è User ƒë√£ b·ªã c·∫•m",
                    description=f"User {user.mention} ƒë√£ b·ªã c·∫•m chat to√†n server r·ªìi",
                    color=discord.Color.orange()
                )
            
            await ctx.reply(embed=embed, mention_author=True)
            
        elif action.lower() == 'unban':
            if not user:
                embed = discord.Embed(
                    title="‚ùå Thi·∫øu th√¥ng tin",
                    description="Vui l√≤ng mention user c·∫ßn b·ªè c·∫•m chat!",
                    color=discord.Color.red()
                )
                await ctx.reply(embed=embed, mention_author=True)
                return
            
            # B·ªè global restriction
            success = self.remove_global_restriction(guild_id, user.id)
            
            if success:
                embed = discord.Embed(
                    title="‚úÖ ƒê√£ b·ªè c·∫•m chat",
                    description=f"User {user.mention} c√≥ th·ªÉ chat b√¨nh th∆∞·ªùng tr·ªü l·∫°i",
                    color=discord.Color.green(),
                    timestamp=datetime.now()
                )
            else:
                embed = discord.Embed(
                    title="‚ö†Ô∏è User kh√¥ng b·ªã c·∫•m",
                    description=f"User {user.mention} kh√¥ng b·ªã c·∫•m chat to√†n server",
                    color=discord.Color.orange()
                )
            
            await ctx.reply(embed=embed, mention_author=True)
            
        elif action.lower() == 'list':
            guild_data = self.channel_restrictions.get(guild_id, {})
            
            embed = discord.Embed(
                title="üìã Danh s√°ch gi·ªõi h·∫°n channel",
                description="Users b·ªã gi·ªõi h·∫°n chat trong server n√†y",
                color=discord.Color.blue(),
                timestamp=datetime.now()
            )
            
            # Users b·ªã c·∫•m to√†n server
            global_banned = guild_data.get('global_restricted_users', [])
            if global_banned:
                banned_text = []
                for user_id in global_banned[:10]:  # Gi·ªõi h·∫°n 10 users
                    try:
                        user = ctx.guild.get_member(user_id)
                        if user:
                            banned_text.append(f"‚Ä¢ {user.mention} (`{user_id}`)")
                        else:
                            banned_text.append(f"‚Ä¢ User ID: `{user_id}` (ƒë√£ r·ªùi server)")
                    except:
                        banned_text.append(f"‚Ä¢ User ID: `{user_id}`")
                
                if len(global_banned) > 10:
                    banned_text.append(f"... v√† {len(global_banned) - 10} user kh√°c")
                
                embed.add_field(
                    name="üö´ C·∫•m chat to√†n server",
                    value='\n'.join(banned_text) if banned_text else "Kh√¥ng c√≥",
                    inline=False
                )
            
            # Users b·ªã gi·ªõi h·∫°n channels
            channel_restricted = {k: v for k, v in guild_data.items() if k != 'global_restricted_users'}
            if channel_restricted:
                restricted_text = []
                count = 0
                for user_id, allowed_channels in channel_restricted.items():
                    if count >= 5:  # Gi·ªõi h·∫°n 5 users
                        break
                    try:
                        user = ctx.guild.get_member(user_id)
                        channels_text = ', '.join([f"<#{cid}>" for cid in allowed_channels[:3]])
                        if len(allowed_channels) > 3:
                            channels_text += f" (+{len(allowed_channels) - 3})"
                        
                        if user:
                            restricted_text.append(f"‚Ä¢ {user.mention}: {channels_text}")
                        else:
                            restricted_text.append(f"‚Ä¢ `{user_id}`: {channels_text}")
                        count += 1
                    except:
                        pass
                
                if len(channel_restricted) > 5:
                    restricted_text.append(f"... v√† {len(channel_restricted) - 5} user kh√°c")
                
                embed.add_field(
                    name="üîí Gi·ªõi h·∫°n channels",
                    value='\n'.join(restricted_text) if restricted_text else "Kh√¥ng c√≥",
                    inline=False
                )
            
            if not global_banned and not channel_restricted:
                embed.add_field(
                    name="‚úÖ Tr·∫°ng th√°i",
                    value="Kh√¥ng c√≥ user n√†o b·ªã gi·ªõi h·∫°n channel",
                    inline=False
                )
            
            embed.set_footer(text=f"T·ªïng: {len(global_banned)} banned, {len(channel_restricted)} restricted")
            
            await ctx.reply(embed=embed, mention_author=True)
            
        elif action.lower() == 'check':
            if not user:
                embed = discord.Embed(
                    title="‚ùå Thi·∫øu th√¥ng tin",
                    description="Vui l√≤ng mention user c·∫ßn ki·ªÉm tra!",
                    color=discord.Color.red()
                )
                await ctx.reply(embed=embed, mention_author=True)
                return
            
            guild_data = self.channel_restrictions.get(guild_id, {})
            
            embed = discord.Embed(
                title="üîç Ki·ªÉm tra gi·ªõi h·∫°n channel",
                description=f"Tr·∫°ng th√°i gi·ªõi h·∫°n c·ªßa {user.mention}",
                color=discord.Color.blue(),
                timestamp=datetime.now()
            )
            
            embed.add_field(
                name="üë§ User",
                value=f"{user.mention} (`{user.id}`)",
                inline=True
            )
            
            # Ki·ªÉm tra quy·ªÅn ƒë·∫∑c bi·ªát
            if user.id == self.bot_instance.supreme_admin_id:
                embed.add_field(
                    name="üëë Quy·ªÅn",
                    value="Supreme Admin",
                    inline=True
                )
                embed.add_field(
                    name="‚úÖ Tr·∫°ng th√°i",
                    value="Chat ƒë∆∞·ª£c m·ªçi n∆°i (kh√¥ng b·ªã gi·ªõi h·∫°n)",
                    inline=False
                )
            elif self.bot_instance.is_admin(user.id):
                embed.add_field(
                    name="üõ°Ô∏è Quy·ªÅn",
                    value="Admin",
                    inline=True
                )
                embed.add_field(
                    name="‚úÖ Tr·∫°ng th√°i",
                    value="Chat ƒë∆∞·ª£c m·ªçi n∆°i (kh√¥ng b·ªã gi·ªõi h·∫°n)",
                    inline=False
                )
            else:
                embed.add_field(
                    name="üë• Quy·ªÅn",
                    value="User th∆∞·ªùng",
                    inline=True
                )
                
                # Ki·ªÉm tra global ban
                global_banned = guild_data.get('global_restricted_users', [])
                if user.id in global_banned:
                    embed.add_field(
                        name="üö´ Tr·∫°ng th√°i",
                        value="B·ªã c·∫•m chat to√†n server",
                        inline=False
                    )
                    embed.color = discord.Color.red()
                elif user.id in guild_data:
                    # B·ªã gi·ªõi h·∫°n channels
                    allowed_channels = guild_data[user.id]
                    channels_text = '\n'.join([f"<#{cid}>" for cid in allowed_channels])
                    
                    embed.add_field(
                        name="üîí Tr·∫°ng th√°i",
                        value="B·ªã gi·ªõi h·∫°n channels",
                        inline=False
                    )
                    embed.add_field(
                        name="‚úÖ Channels ƒë∆∞·ª£c ph√©p",
                        value=channels_text,
                        inline=False
                    )
                    embed.color = discord.Color.orange()
                else:
                    embed.add_field(
                        name="‚úÖ Tr·∫°ng th√°i",
                        value="Kh√¥ng b·ªã gi·ªõi h·∫°n (chat ƒë∆∞·ª£c m·ªçi n∆°i)",
                        inline=False
                    )
                    embed.color = discord.Color.green()
            
            await ctx.reply(embed=embed, mention_author=True)
            
        else:
            embed = discord.Embed(
                title="‚ùå Action kh√¥ng h·ª£p l·ªá",
                description=f"Action `{action}` kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£!",
                color=discord.Color.red()
            )
            embed.add_field(
                name="Actions h·ª£p l·ªá",
                value="`add`, `remove`, `ban`, `unban`, `list`, `check`",
                inline=False
            )
            await ctx.reply(embed=embed, mention_author=True)
    
    def register_commands(self) -> None:
        """ƒêƒÉng k√Ω c√°c commands cho Channel Restriction"""
        
        @self.bot.command(name='restrict', description='Qu·∫£n l√Ω gi·ªõi h·∫°n chat channel cho users')
        async def restrict_command(ctx, action: str = None, user: discord.Member = None, *channels):
            await self.handle_restrict_command(ctx, action, user, *channels)
